#!/bin/sh
# postrm script for salor-retail
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule

echo "postrm called with $1"

db_get salor-retail/old-instances || true
gOldInstances="${RET}"
db_get salor-retail/current-instances || true
gInstances="${RET}"
    
case "$1" in
  purge)
    if [ -f /usr/share/dbconfig-common/dpkg/postrm ]; then
      for lInstance in $gOldInstances; do
        db_get salor-retail/instances/$lInstance/dbconfig-install || true
        if [ "$RET" = "true" ]; then
          ( . /usr/share/dbconfig-common/dpkg/postrm ; dbc_go salor-retail/instances/$lInstance purge )
        fi
      done
      for lInstance in $gInstances; do
        db_get salor-retail/instances/$lInstance/dbconfig-install || true
        if [ "$RET" = "true" ]; then
          ( . /usr/share/dbconfig-common/dpkg/postrm ; dbc_go salor-retail/instances/$lInstance purge )
        fi
      done
    fi
    if which ucf >/dev/null 2>&1; then
      for lInstance in $gOldInstances; do
        ucf --purge /etc/salor-retail/$lInstance/database.yml
        ucf --purge /etc/salor-retail/$lInstance/config.yml
        ucf --purge /etc/salor-retail/$lInstance/codepages.yml
        ucf --purge /etc/salor-retail/$lInstance/Gemfile
        ucf --purge /etc/salor-retail/$lInstance/Gemfile.lock
        ucf --purge /etc/salor-retail/$lInstance/sr-$lInstance-apache-http
        ucf --purge /etc/salor-retail/$lInstance/sr-$lInstance-apache-https
        ucf --purge /etc/salor-retail/$lInstance/sr-$lInstance-nginx-http
        ucf --purge /etc/salor-retail/$lInstance/sr-$lInstance-nginx-https
      done
      for lInstance in $gInstances; do
        ucf --purge /etc/salor-retail/$lInstance/database.yml
        ucf --purge /etc/salor-retail/$lInstance/config.yml
        ucf --purge /etc/salor-retail/$lInstance/codepages.yml
        ucf --purge /etc/salor-retail/$lInstance/Gemfile
        ucf --purge /etc/salor-retail/$lInstance/Gemfile.lock
        ucf --purge /etc/salor-retail/$lInstance/sr-$lInstance-apache-http
        ucf --purge /etc/salor-retail/$lInstance/sr-$lInstance-apache-https
        ucf --purge /etc/salor-retail/$lInstance/sr-$lInstance-nginx-http
        ucf --purge /etc/salor-retail/$lInstance/sr-$lInstance-nginx-https
      done
    fi
    
    rm -rf /usr/share/salor-retail
    rm -rf /var/log/salor-retail
    #rm -rf /var/cache/salor-retail/*
    rm -rf /etc/salor-retail
    rm -rf /var/lib/salor-retail
    rm -rf /var/tmp/salor-retail
  ;;
    
  remove)
    if [ -f /usr/share/dbconfig-common/dpkg/postrm ]; then
      for lInstance in $gOldInstances; do
        db_get salor-retail/instances/$lInstance/dbconfig-install || true
        if [ "$RET" = "true" ]; then
          ( . /usr/share/dbconfig-common/dpkg/postrm ; dbc_go salor-retail/instances/$lInstance remove )
        fi
      done
      for lInstance in $gInstances; do
        db_get salor-retail/instances/$lInstance/dbconfig-install || true
        if [ "$RET" = "true" ]; then
          ( . /usr/share/dbconfig-common/dpkg/postrm ; dbc_go salor-retail/instances/$lInstance remove )
        fi
      done
    fi
  ;;
  
  upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
  ;;
    
  *)
      echo "postrm called with unknown argument \`$1'" >&2
      exit 1
  ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
